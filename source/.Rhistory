install.packages("swirl")
library("swirl")
swirl()
bye()
library("swirl")
swirl()
swirl()
?dir.create()
dir.create("testdir2", "testdir3", recursive = TRUE)
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd("old.dir")
setwd(old.dir)
1:20
pi:10
15:1
?:
?':'
seq(1,20)
seq(0, 10, by=0.5)
seq(5,10, length=20)
seq(5,10, length=30)
my_seq <- seq(5,10, lenght=30)
my_seq<-seq(5,10, length = 30)
lenght(my_seq)
length(my_seq)
1:length(my_seq)
1
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times = 10)
shiny::runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
shiny::runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
files = list.files(pattern="*.csv")
myfiles = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
countyList <- myfiles[c(1,2)]
countyList$countyStates <- paste(countyList$County, countyList$State, sep=',')
View(countyList)
shiny::runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
shiny::runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
shiny::runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
output$pieChartAQI <- renderPlot({
ggplot(data = pieChartData()) + geom_bar(mapping= aes(x="", y=Days, fill=AQI), width = 1, stat="identity", color='black') + coord_polar("y", start=0) +
theme(axis.ticks=element_blank(),
axis.title=element_blank(),
axis.text.y=element_blank()) +
scale_y_continuous(labels=NULL) + ggtitle("AQI") + theme(plot.title = element_text(face = "bold"))
})
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
shiny::runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
shiny::runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
runApp('UicFiles/CS 424/Project1 Data/Project1_Source')
setwd("~/UicFiles/CS 424/Project2/source")
dailyData  <- read_fst('dailyData.fst')
library(fst)
dailyData  <- read_fst('dailyData.fst')
View(dailyData)
listOfCounties <- dailyData[c(1,2)]
View(listOfCounties)
View(listOfCounties)
# Combine all the rows in the new data set to create a new colomn CountyXState
# Format of the new column: (County, State)
listOfCounties$CountyXState <- paste(listOfCounties$County, listOfCounties$State, sep=', ')
listOfCounties$CountyXState <- paste(listOfCounties$county Name, listOfCounties$State Name, sep=', ')
listOfCounties$CountyXState <- paste(listOfCounties$countyName, listOfCounties$State Name, sep=', ')
View(listOfCounties)
dailyData  <- read_fst('dailyData.fst')
counties <- myfiles[c(1,2)]
counties <- dailyData[c(1,2)]
dailyData  <- read_fst('dailyData.fst', col_names = FALSE)
View(dailyData)
dailyData  <- read_fst('dailyData.fst', strip.white = FALSE)
dailyData  <- read_fst('dailyData.fst', strip.white = TRUE)
dailyData  <- read_fst('dailyData.fst')
counties <- dailyData[c(1,2)]
listOfCounties$CountyXState <- paste(counties$`county Name`, counties$`State Name`, sep=', ')
counties$CountyXState <- paste(counties$`county Name`, counties$`State Name`, sep=', ')
View(counties)
sites <- read.table(file = "sites/aqs_sites.csv", sep=",",header = TRUE)
sites <- read.table(file = "aqs_sites.csv", sep=",",header = TRUE)
View(sites)
